// Code generated by go-swagger; DO NOT EDIT.

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
// 	http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/firecracker-microvm/firecracker-go-sdk/client/models"
)

// PatchBalloonStatsIntervalReader is a Reader for the PatchBalloonStatsInterval structure.
type PatchBalloonStatsIntervalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchBalloonStatsIntervalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPatchBalloonStatsIntervalNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchBalloonStatsIntervalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchBalloonStatsIntervalDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchBalloonStatsIntervalNoContent creates a PatchBalloonStatsIntervalNoContent with default headers values
func NewPatchBalloonStatsIntervalNoContent() *PatchBalloonStatsIntervalNoContent {
	return &PatchBalloonStatsIntervalNoContent{}
}

/*PatchBalloonStatsIntervalNoContent handles this case with default header values.

Balloon statistics interval updated
*/
type PatchBalloonStatsIntervalNoContent struct {
}

func (o *PatchBalloonStatsIntervalNoContent) Error() string {
	return fmt.Sprintf("[PATCH /balloon/statistics][%d] patchBalloonStatsIntervalNoContent ", 204)
}

func (o *PatchBalloonStatsIntervalNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBalloonStatsIntervalBadRequest creates a PatchBalloonStatsIntervalBadRequest with default headers values
func NewPatchBalloonStatsIntervalBadRequest() *PatchBalloonStatsIntervalBadRequest {
	return &PatchBalloonStatsIntervalBadRequest{}
}

/*PatchBalloonStatsIntervalBadRequest handles this case with default header values.

Balloon statistics interval cannot be updated due to bad input
*/
type PatchBalloonStatsIntervalBadRequest struct {
	Payload *models.Error
}

func (o *PatchBalloonStatsIntervalBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /balloon/statistics][%d] patchBalloonStatsIntervalBadRequest  %+v", 400, o.Payload)
}

func (o *PatchBalloonStatsIntervalBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchBalloonStatsIntervalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchBalloonStatsIntervalDefault creates a PatchBalloonStatsIntervalDefault with default headers values
func NewPatchBalloonStatsIntervalDefault(code int) *PatchBalloonStatsIntervalDefault {
	return &PatchBalloonStatsIntervalDefault{
		_statusCode: code,
	}
}

/*PatchBalloonStatsIntervalDefault handles this case with default header values.

Internal server error
*/
type PatchBalloonStatsIntervalDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the patch balloon stats interval default response
func (o *PatchBalloonStatsIntervalDefault) Code() int {
	return o._statusCode
}

func (o *PatchBalloonStatsIntervalDefault) Error() string {
	return fmt.Sprintf("[PATCH /balloon/statistics][%d] patchBalloonStatsInterval default  %+v", o._statusCode, o.Payload)
}

func (o *PatchBalloonStatsIntervalDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchBalloonStatsIntervalDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
